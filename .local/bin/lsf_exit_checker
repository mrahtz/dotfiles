#!/usr/bin/env python3

import os
import os.path as osp
import subprocess
import uuid

import boto3

QUEUE_URL = "FILLME"


def send_notification(message):
    session = boto3.Session(profile_name='sqs_alerts')
    sqs = session.client('sqs')
    sqs.send_message(QueueUrl=QUEUE_URL, MessageBody=message, MessageGroupId='0',
                     MessageDeduplicationId=str(int(uuid.uuid4())))


def get_job_desc(job_id):
    cmd = "bjobs -d -l {}".format(job_id)
    log = subprocess.check_output(cmd.split(' ')).decode().splitlines()

    in_job_desc = False
    job_desc = ""
    for line in log:
        if in_job_desc and not line.startswith(' '):
            break
        if line.startswith('Job <'):
            in_job_desc = True
        if in_job_desc:
            job_desc += line.strip()
    return job_desc


def main():
    cmd = "bjobs -d"
    log = subprocess.check_output(cmd.split(' '), stderr=subprocess.PIPE).decode().splitlines()
    job_lines = log[1:]
    unhappy_job_ids = []
    for job_line in job_lines:
        fields = job_line.split()
        job_id = fields[0]
        stat = fields[2]
        if stat != 'DONE':
            unhappy_job_ids.append(job_id)

    for job_id in unhappy_job_ids:
        if job_id in os.listdir('.unhappy_job_ids'):
            continue
        open(osp.join('.unhappy_job_ids', str(job_id)), 'w').close()
        msg = "Euler job {} exited uncleanly".format(job_id)
        send_notification(msg)


if __name__ == '__main__':
    main()
